name: publish-nuget

permissions:
  packages: write
  contents: read

on:
  workflow_call:
    inputs:
      dotnet_version:
        description: 'A version dotnet to use.'
        default: '9.0.x'
        required: false
        type: string
      version_prefix:
        description: 'A version prefix: Major and Minor numbers. For example 1.0'
        default: '1.0'
        required: false
        type: string
      solution_path:
        description: 'Path to *.sln file. By default, the root folder.'
        required: false
        type: string
    secrets:
      packages_write_token:
        required: true

jobs:
  pack-and-publish:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Parse version prefix
        run: |
          if [[ "${{ inputs.version_prefix }}" =~ ^([0-9]+)\.([0-9]+)\.?$ ]]; then
            major="${BASH_REMATCH[1]}"
            minor="${BASH_REMATCH[2]}"
            echo "Major: $major, Minor: $minor"
            echo "VERSION_PREFIX=$major.$minor" >> $GITHUB_ENV
          else
            echo "Invalid version_prefix"
            exit 1
          fi
      
      - name: Set Version         
        run: |
          patch="${{ github.run_number }}-$(date +%Y%m%d%H%M)"
          echo "major.minor $VERSION_PREFIX, patch $patch"
          echo "VERSION=$VERSION_PREFIX.$patch" >> $GITHUB_ENV
       
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ inputs.dotnet_version }}

      - name: Configure NuGet
        run: |
          mkdir -p packages
          dotnet new nugetconfig --name nuget.config --output ./packages
          dotnet nuget add source --name github --username ${{ github.actor }} --password ${{ secrets.packages_write_token }} --store-password-in-clear-text "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" --configfile ./packages/nuget.config

      - name: Restore
        run: dotnet restore ${{ inputs.solution_path }} --configfile ./packages/nuget.config

      - name: Build
        run: dotnet build ${{ inputs.solution_path }} --configuration Release --no-restore
          
      - name: Pack
        run: |
          mkdir -p nupkgs        
          dotnet pack ${{ inputs.solution_path }} --no-build --no-restore --output nupkgs -p:PackageVersion=${VERSION}

      - name: Push packages
        run: |
          for f in ./nupkgs/*.nupkg
          do
            echo "Pushing package: $f"
            dotnet nuget push "$f" --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" --api-key ${{ secrets.packages_write_token }}
          done